{"version":3,"sources":["utils/index.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,+BAAiC;AACjC,2BAA6B;AAC7B,uBAAyB;AACzB,+BAA8B;AAI9B,IAAM,KAAK,GAAG,IAAI,aAAK,EAAE,CAAC;AAEb,QAAA,4BAA4B,GAAG,UAAC,WAAyB,EAAE,QAAkC;IAAlC,yBAAA,EAAA,aAAkC;IACxG,IAAI,QAAQ,GAAI,WAAW,CAAC,WAAmB,CAAC,QAAQ,CAAC;IACzD,IAAI,YAAY,cACd,OAAO,EAAE,WAAW,CAAC,OAAO,EAC5B,QAAQ,EAAE,WAAW,CAAC,QAAQ,IAC3B,WAAW,CAAC,WAAW,CAC3B,CAAC;IACF,EAAE,CAAC,CAAC,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC;QAChE,IAAI,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC7C,IAAI,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACpD,YAAY,gBACP,YAAY,IACf,QAAQ,EAAE,eAAe,GAC1B,CAAC;IACJ,CAAC;IACD,MAAM,CAAC,YAAY,CAAC;AACtB,CAAC,CAAC;AAEW,QAAA,4BAA4B,GAAG,UAAC,YAAkC;IAC7E,IAAI,gBAAgB,GAAiB;QACnC,OAAO,EAAE,YAAY,CAAC,OAAO,IAAI,EAAE;QACnC,QAAQ,EAAE,YAAY,CAAC,QAAQ;QAC/B,WAAW,eACL,YAAoB,CACzB;KACF,CAAC;IACF,OAAQ,gBAAgB,CAAC,WAAmB,CAAC,OAAO,CAAC;IACrD,OAAQ,gBAAgB,CAAC,WAAmB,CAAC,QAAQ,CAAC;IACtD,MAAM,CAAC,gBAAgB,CAAC;AAC1B,CAAC,CAAC;AAEW,QAAA,gBAAgB,GAAG,UAAC,WAAyB,EAAE,QAA6B;IACvF,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,GAA2B,EAAE,GAA0B;QACzE,IAAI,cAAc,GAAG,oCAA4B,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QACzE,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QACvD,MAAM,CAAC,cAAc,EAAE,UAAC,GAAQ;YAC9B,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBACR,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,GAAG,GAAG,cAAc,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;YAC3E,CAAC;YAED,EAAE,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,cAAc,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,MAAM,EAAE,UAAC,GAAQ;gBAC1F,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;oBACR,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;oBACjB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAClB,CAAC;gBACD,GAAG,EAAE,CAAC;YACR,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEW,QAAA,mBAAmB,GAAW,UAAU,CAAC","file":"index.js","sourcesContent":["import * as mkdirp from 'mkdirp';\r\nimport * as path from 'path';\r\nimport * as fs from 'fs';\r\nimport { Cpass } from 'cpass';\r\n\r\nimport { IAuthContext, IAuthContextSettings, IAuthConfigSettings } from '../interfaces';\r\n\r\nconst cpass = new Cpass();\r\n\r\nexport const convertAuthContextToSettings = (authContext: IAuthContext, settings: IAuthConfigSettings = {}): IAuthContextSettings => {\r\n  let password = (authContext.authOptions as any).password;\r\n  let plainContext: IAuthContextSettings = {\r\n    siteUrl: authContext.siteUrl,\r\n    strategy: authContext.strategy,\r\n    ...authContext.authOptions\r\n  };\r\n  if (typeof password !== 'undefined' && settings.encryptPassword) {\r\n    let decodedPassword = cpass.decode(password);\r\n    let encodedPassword = cpass.encode(decodedPassword);\r\n    plainContext = {\r\n      ...plainContext,\r\n      password: encodedPassword\r\n    };\r\n  }\r\n  return plainContext;\r\n};\r\n\r\nexport const convertSettingsToAuthContext = (configObject: IAuthContextSettings): IAuthContext => {\r\n  let formattedContext: IAuthContext = {\r\n    siteUrl: configObject.siteUrl || '',\r\n    strategy: configObject.strategy,\r\n    authOptions: {\r\n      ...(configObject as any)\r\n    }\r\n  };\r\n  delete (formattedContext.authOptions as any).siteUrl;\r\n  delete (formattedContext.authOptions as any).strategy;\r\n  return formattedContext;\r\n};\r\n\r\nexport const saveConfigOnDisk = (authContext: IAuthContext, settings: IAuthConfigSettings): Promise<any> => {\r\n  return new Promise((res: typeof Promise.resolve, rej: typeof Promise.reject) => {\r\n    let configDataJson = convertAuthContextToSettings(authContext, settings);\r\n    let saveFolderPath = path.dirname(settings.configPath);\r\n    mkdirp(saveFolderPath, (err: any) => {\r\n      if (err) {\r\n        console.log('Error creating folder ' + '`' + saveFolderPath + ' `', err);\r\n      }\r\n      // tslint:disable-next-line:no-shadowed-variable\r\n      fs.writeFile(settings.configPath, JSON.stringify(configDataJson, null, 2), 'utf8', (err: any) => {\r\n        if (err) {\r\n          console.log(err);\r\n          return rej(err);\r\n        }\r\n        res();\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\nexport const defaultPasswordMask: string = '********';\r\n"]}
"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var mkdirp = require("mkdirp");
var path = require("path");
var fs = require("fs");
var cpass_1 = require("cpass");
var cpass = new cpass_1.Cpass();
exports.convertAuthContextToSettings = function (authContext, settings) {
    if (settings === void 0) { settings = {}; }
    var password = authContext.authOptions.password;
    var plainContext = __assign({ siteUrl: authContext.siteUrl, strategy: authContext.strategy }, authContext.authOptions);
    if (typeof password !== 'undefined' && settings.encryptPassword) {
        var decodedPassword = cpass.decode(password);
        var encodedPassword = cpass.encode(decodedPassword);
        plainContext = __assign({}, plainContext, { password: encodedPassword });
    }
    return plainContext;
};
exports.convertSettingsToAuthContext = function (configObject) {
    var formattedContext = {
        siteUrl: configObject.siteUrl || '',
        strategy: configObject.strategy,
        authOptions: __assign({}, configObject)
    };
    delete formattedContext.authOptions.siteUrl;
    delete formattedContext.authOptions.strategy;
    return formattedContext;
};
exports.saveConfigOnDisk = function (authContext, settings) {
    return new Promise(function (res, rej) {
        var configDataJson = exports.convertAuthContextToSettings(authContext, settings);
        var saveFolderPath = path.dirname(settings.configPath);
        mkdirp(saveFolderPath, function (err) {
            if (err) {
                console.log('Error creating folder ' + '`' + saveFolderPath + ' `', err);
            }
            fs.writeFile(settings.configPath, JSON.stringify(configDataJson, null, 2), 'utf8', function (err) {
                if (err) {
                    console.log(err);
                    return rej(err);
                }
                res();
            });
        });
    });
};
exports.defaultPasswordMask = '********';

//# sourceMappingURL=index.js.map

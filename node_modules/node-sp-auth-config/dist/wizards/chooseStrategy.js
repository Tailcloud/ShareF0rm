"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inquirer = require("inquirer");
var config_1 = require("../config");
var wizard = function (authContext, answersAll, settings) {
    if (answersAll === void 0) { answersAll = {}; }
    if (settings === void 0) { settings = {}; }
    return new Promise(function (resolve, reject) {
        var promptFor = [];
        var target = (answersAll.siteUrl.toLowerCase().indexOf('.sharepoint.com') !== -1 ||
            answersAll.siteUrl.toLowerCase().indexOf('.sharepoint.cn') !== -1) ? 'Online' : 'OnPremise';
        var strategies = config_1.getStrategies().filter(function (strategy) {
            return strategy.target.indexOf(target) !== -1;
        });
        promptFor = [{
                name: 'strategy',
                message: 'Authentication strategy',
                type: 'list',
                choices: strategies.map(function (strategy) {
                    return {
                        name: strategy.name,
                        value: strategy.id,
                        short: strategy.name
                    };
                }),
                default: strategies.reduce(function (position, strategy, index) {
                    if (authContext.strategy === strategy.id) {
                        position = index;
                    }
                    return position;
                }, 0)
            }];
        inquirer.prompt(promptFor)
            .then(function (answers) {
            answersAll = __assign({}, answersAll, answers);
            resolve(answersAll);
        });
    });
};
exports.default = wizard;

//# sourceMappingURL=chooseStrategy.js.map

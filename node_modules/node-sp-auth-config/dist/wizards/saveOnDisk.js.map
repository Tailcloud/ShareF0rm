{"version":3,"sources":["wizards/saveOnDisk.ts"],"names":[],"mappings":";;AAAA,mCAAqC;AAErC,kCAAwG;AAGxG,IAAM,MAAM,GAAG,UAAC,WAAyB,EAAE,UAAiC,EAAE,QAAkC;IAArE,2BAAA,EAAA,eAAiC;IAAE,yBAAA,EAAA,aAAkC;IAC9G,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAA+B,EAAE,MAA6B;QAChF,EAAE,CAAC,CAAC,OAAO,QAAQ,CAAC,gBAAgB,KAAK,WAAW,CAAC,CAAC,CAAC;YACrD,IAAI,SAAS,GAAwB,CAAC;oBACpC,IAAI,EAAE,MAAM;oBACZ,OAAO,EAAE,eAAe;oBACxB,IAAI,EAAE,SAAS;iBAChB,CAAC,CAAC;YACH,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;iBACvB,IAAI,CAAC,UAAC,OAAyB;gBAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,wBAAgB,CAAC,oCAA4B,CAAC,UAA0B,CAAC,EAAE,QAAQ,CAAC;yBACxF,IAAI,CAAC;wBACJ,OAAO,CAAC,UAAU,CAAC,CAAC;oBACtB,CAAC,CAAC,CAAC;gBACP,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,OAAO,CAAC,UAAU,CAAC,CAAC;gBACtB,CAAC;YACH,CAAC,CAAC,CAAC;QACP,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC9B,MAAM,CAAC,wBAAgB,CAAC,oCAA4B,CAAC,UAA0B,CAAC,EAAE,QAAQ,CAAC;qBACxF,IAAI,CAAC;oBACJ,OAAO,CAAC,UAAU,CAAC,CAAC;gBACtB,CAAC,CAAC,CAAC;YACP,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,OAAO,CAAC,UAAU,CAAC,CAAC;YACtB,CAAC;QACH,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","file":"saveOnDisk.js","sourcesContent":["import * as inquirer from 'inquirer';\r\n\r\nimport { convertAuthContextToSettings, convertSettingsToAuthContext, saveConfigOnDisk } from '../utils';\r\nimport { IAuthContext, IAuthConfigSettings } from '../interfaces';\r\n\r\nconst wizard = (authContext: IAuthContext, answersAll: inquirer.Answers = {}, settings: IAuthConfigSettings = {}): Promise<inquirer.Answers> => {\r\n  return new Promise((resolve: typeof Promise.resolve, reject: typeof Promise.reject) => {\r\n    if (typeof settings.saveConfigOnDisk === 'undefined') {\r\n      let promptFor: inquirer.Question[] = [{\r\n        name: 'save',\r\n        message: 'Save on disk?',\r\n        type: 'confirm'\r\n      }];\r\n      inquirer.prompt(promptFor)\r\n        .then((answers: inquirer.Answers) => {\r\n          if (answers.save) {\r\n            return saveConfigOnDisk(convertSettingsToAuthContext(answersAll as IAuthContext), settings)\r\n              .then(() => {\r\n                resolve(answersAll);\r\n              });\r\n          } else {\r\n            resolve(answersAll);\r\n          }\r\n        });\r\n    } else {\r\n      if (settings.saveConfigOnDisk) {\r\n        return saveConfigOnDisk(convertSettingsToAuthContext(answersAll as IAuthContext), settings)\r\n          .then(() => {\r\n            resolve(answersAll);\r\n          });\r\n      } else {\r\n        resolve(answersAll);\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\nexport default wizard;\r\n"]}
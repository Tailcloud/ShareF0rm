{"version":3,"sources":["config/index.ts"],"names":[],"mappings":";;AAAA,qCAAuC;AAG1B,QAAA,eAAe,GAAG;IAC7B,MAAM,CAAC,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;AACjC,CAAC,CAAC;AAEW,QAAA,aAAa,GAAG;IAC3B,IAAM,UAAU,GAAwB;QACtC;YACE,EAAE,EAAE,0BAA0B;YAC9B,IAAI,EAAE,yBAAyB;YAC/B,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,CAAC,WAAW,CAAC;YACrB,cAAc,EAAE,MAAM,CAAC,0BAA0B;SAClD,EAAE;YACD,EAAE,EAAE,yBAAyB;YAC7B,IAAI,EAAE,iCAAiC;YACvC,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,CAAC,WAAW,CAAC;YACrB,cAAc,EAAE,MAAM,CAAC,yBAAyB;SACjD,EAAE;YACD,EAAE,EAAE,yBAAyB;YAC7B,IAAI,EAAE,8BAA8B;YACpC,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,CAAC,WAAW,CAAC;YACrB,cAAc,EAAE,MAAM,CAAC,yBAAyB;SACjD,EAAE;YACD,EAAE,EAAE,2BAA2B;YAC/B,IAAI,EAAE,yBAAyB;YAC/B,YAAY,EAAE,KAAK;YACnB,MAAM,EAAE,CAAC,WAAW,CAAC;YACrB,cAAc,EAAE;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAC7B,MAAM,CAAC,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9C,CAAC;SACF,EAAE;YACD,EAAE,EAAE,iBAAiB;YACrB,IAAI,EAAE,yBAAyB;YAC/B,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,CAAC,QAAQ,CAAC;YAClB,cAAc,EAAE,MAAM,CAAC,uBAAuB;SAC/C,EAAE;YACD,EAAE,EAAE,wBAAwB;YAC5B,IAAI,EAAE,yBAAyB;YAC/B,YAAY,EAAE,KAAK;YACnB,MAAM,EAAE,CAAC,QAAQ,CAAC;YAClB,cAAc,EAAE;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAC7B,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC;SACF,EAAE;YACD,EAAE,EAAE,qBAAqB;YACzB,IAAI,EAAE,uBAAuB;YAC7B,YAAY,EAAE,IAAI;YAClB,MAAM,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC;YAC/B,cAAc,EAAE;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAC7B,MAAM,CAAC,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC;SACF,EAAE;YACD,EAAE,EAAE,qBAAqB;YACzB,IAAI,EAAE,uBAAuB;YAC7B,YAAY,EAAE,KAAK;YACnB,MAAM,EAAE,CAAC,QAAQ,EAAE,WAAW,CAAC;YAC/B,cAAc,EAAE;gBAAC,cAAc;qBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;oBAAd,yBAAc;;gBAC7B,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/C,CAAC;SACF;KACF,CAAC;IAEF,MAAM,CAAC,UAAU,CAAC;AACpB,CAAC,CAAC","file":"index.js","sourcesContent":["import * as spauth from 'node-sp-auth';\r\nimport { IStrategyDictItem } from '../interfaces';\r\n\r\nexport const getTargetsTypes = (): string[] => {\r\n  return ['Online', 'OnPremise'];\r\n};\r\n\r\nexport const getStrategies = (): IStrategyDictItem[] => {\r\n  const strategies: IStrategyDictItem[] = [\r\n    {\r\n      id: 'OnpremiseUserCredentials',\r\n      name: 'User credentials (NTLM)',\r\n      withPassword: true,\r\n      target: ['OnPremise'],\r\n      verifyCallback: spauth.isUserCredentialsOnpremise\r\n    }, {\r\n      id: 'OnpremiseFbaCredentials',\r\n      name: 'Form-based authentication (FBA)',\r\n      withPassword: true,\r\n      target: ['OnPremise'],\r\n      verifyCallback: spauth.isFbaCredentialsOnpremise\r\n    }, {\r\n      id: 'OnpremiseTmgCredentials',\r\n      name: 'Forefront TMG authentication',\r\n      withPassword: true,\r\n      target: ['OnPremise'],\r\n      verifyCallback: spauth.isTmgCredentialsOnpremise\r\n    }, {\r\n      id: 'OnPremiseAddinCredentials',\r\n      name: 'Add-In only permissions',\r\n      withPassword: false,\r\n      target: ['OnPremise'],\r\n      verifyCallback: (...args: any[]) => {\r\n        return spauth.isAddinOnlyOnpremise(args[1]);\r\n      }\r\n    }, {\r\n      id: 'UserCredentials',\r\n      name: 'User credentials (SAML)',\r\n      withPassword: true,\r\n      target: ['Online'],\r\n      verifyCallback: spauth.isUserCredentialsOnline\r\n    }, {\r\n      id: 'OnlineAddinCredentials',\r\n      name: 'Add-In only permissions',\r\n      withPassword: false,\r\n      target: ['Online'],\r\n      verifyCallback: (...args: any[]) => {\r\n        return spauth.isAddinOnlyOnline(args[1]);\r\n      }\r\n    }, {\r\n      id: 'AdfsUserCredentials',\r\n      name: 'ADFS user credentials',\r\n      withPassword: true,\r\n      target: ['Online', 'OnPremise'],\r\n      verifyCallback: (...args: any[]) => {\r\n        return spauth.isAdfsCredentials(args[1]);\r\n      }\r\n    }, {\r\n      id: 'OnDemandCredentials',\r\n      name: 'On-demand credentials',\r\n      withPassword: false,\r\n      target: ['Online', 'OnPremise'],\r\n      verifyCallback: (...args: any[]) => {\r\n        return spauth.isOndemandCredentials(args[1]);\r\n      }\r\n    }\r\n  ];\r\n\r\n  return strategies;\r\n};\r\n"]}